# ============================================
# DEMETER API - Docker Compose
# ============================================

services:
  db:
    image: postgres:16-alpine
    container_name: demeter-db
    restart: unless-stopped
    env_file:
      - ../.env                 # ⬅️ .env está na raiz do projeto
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-demeter}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - demeter

  api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    container_name: demeter-api
    restart: unless-stopped
    env_file:
      - ../.env
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - demeter

  adminer:
    image: adminer:latest
    container_name: demeter-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - demeter

volumes:
  postgres_data:
  uploads:

networks:
  demeter:
